import pandas as pd
from sklearn.feature_extraction.text import CountVectorizer
from sklearn.model_selection import train_test_split
from sklearn.naive_bayes import MultinomialNB
from sklearn.metrics import accuracy_score, classification_report
import matplotlib.pyplot as plt

data = {
    'Email content': [
        'sample email content 1',
        'spam email content 2',
        'another spam email content 3',
        'legitimate email content 4',
        'sample email content 5',
    ],
    'spam': [
        'spam',
        'spam',
        'spam',
        'not spam',
        'not spam',
    ]
}
df = pd.DataFrame(data)

vectorizer = CountVectorizer()
X = vectorizer.fit_transform(df['Email content'])
y = df['spam']

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

classifier = MultinomialNB()
classifier.fit(X_train, y_train)

y_pred = classifier.predict(X_test)

accuracy = accuracy_score(y_test, y_pred)
print(f'Accuracy: {accuracy:.2f}')

print('\nClassification Report:')
print(classification_report(y_test, y_pred))

new_email = ['new spam email content']
X_new = vectorizer.transform(new_email)
prediction = classifier.predict(X_new)
print(f'\nPrediction for new email: {prediction[0]}')


plt.figure(figsize=(8, 6))
df['spam'].value_counts().plot(kind='pie', autopct='%1.1f%%', colors=['red', 'green'])
plt.title('Spam vs Not Spam Emails')
plt.ylabel('')
plt.show()


fig, ax = plt.subplots(figsize=(6, 4))
ax.text(0.5, 0.5, 'Congrats! Spam Removed!', fontsize=16, ha='center', va='center',
        color='peachpuff', weight='bold', style='italic')
ax.axis('off')
fig.patch.set_facecolor('red')  
plt.show()
